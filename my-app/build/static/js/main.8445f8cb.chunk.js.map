{"version":3,"sources":["App.js","index.js"],"names":["API_BASE_URL","App","mapRef","useRef","mapInstance","featureSource","VectorSource","interactionSource","activeTool","distancePoints","createFeatureFromPlace","useCallback","place","coords","fromLonLat","lon","lat","Feature","geometry","Point","name","type","id","addLocation","async","lonLat","data","latitude","longitude","res","fetch","method","headers","body","JSON","stringify","ok","json","feature","current","addFeature","alert","concat","err","console","error","findNearby","radiusMeters","clear","url","places","refPoint","forEach","p","length","findNearest","nearest","calculateDistance","p1","p2","lon1","lat1","lon2","lat2","result","output","document","getElementById","innerText","distance_km","toFixed","distance_m","feat1","feat2","line","LineString","addFeatures","setActiveTool","tool","useEffect","basemap","TileLayer","source","OSM","featureLayer","VectorLayer","interactionLayer","map","Map","target","layers","view","View","center","zoom","on","evt","toLonLat","coordinate","prompt","push","setTarget","_jsxs","style","display","height","children","_jsx","ref","flex","padding","backgroundColor","overflowY","marginBottom","onClick","placeholder","defaultValue","radius","parseFloat","value","isNaN","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.8445f8cb.chunk.js","sourcesContent":["import React, { useEffect, useRef, useCallback } from \"react\";\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport { fromLonLat, toLonLat } from \"ol/proj\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport LineString from \"ol/geom/LineString\";\n\nconst API_BASE_URL = \"http://localhost:8080/api/places\";\n\nconst App = () => {\n  const mapRef = useRef();\n  const mapInstance = useRef();\n  const featureSource = useRef(new VectorSource());\n  const interactionSource = useRef(new VectorSource());\n  const activeTool = useRef(null);\n  const distancePoints = useRef([]);\n\n  // --- Functions ---\n  const createFeatureFromPlace = useCallback((place) => {\n    const coords = fromLonLat([place.lon, place.lat]);\n    return new Feature({\n      geometry: new Point(coords),\n      name: place.name,\n      type: place.type,\n      id: place.id,\n    });\n  }, []);\n\n  const addLocation = useCallback(async (lonLat, name, type) => {\n    const [lon, lat] = lonLat;\n    const data = { name, type, latitude: lat, longitude: lon };\n    try {\n      const res = await fetch(API_BASE_URL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (res.ok) {\n        const place = await res.json();\n        const feature = createFeatureFromPlace(place);\n        featureSource.current.addFeature(feature);\n        alert(`Location Added: ${name}`);\n      } else alert(\"Failed to add location.\");\n    } catch (err) {\n      console.error(\"Error adding location:\", err);\n    }\n  }, [createFeatureFromPlace]);\n\n  const findNearby = useCallback(async (lonLat, radiusMeters) => {\n    const [lon, lat] = lonLat;\n    featureSource.current.clear();\n    interactionSource.current.clear();\n    try {\n      const url = `${API_BASE_URL}/nearby?lat=${lat}&lon=${lon}&radiusMeters=${radiusMeters}`;\n      const res = await fetch(url);\n      if (res.ok) {\n        const places = await res.json();\n        const refPoint = new Feature({ geometry: new Point(fromLonLat(lonLat)) });\n        interactionSource.current.addFeature(refPoint);\n        places.forEach((p) => featureSource.current.addFeature(createFeatureFromPlace(p)));\n        alert(`Found ${places.length} nearby places.`);\n      } else alert(\"Failed to find nearby places.\");\n    } catch (err) {\n      console.error(\"Error finding nearby:\", err);\n    }\n  }, [createFeatureFromPlace]);\n\n  const findNearest = useCallback(async (lonLat) => {\n    const [lon, lat] = lonLat;\n    interactionSource.current.clear();\n    const refPoint = new Feature({ geometry: new Point(fromLonLat(lonLat)) });\n    interactionSource.current.addFeature(refPoint);\n    try {\n      const url = `${API_BASE_URL}/nearest?lat=${lat}&lon=${lon}`;\n      const res = await fetch(url);\n      if (res.ok) {\n        const nearest = await res.json();\n        const feature = createFeatureFromPlace(nearest);\n        interactionSource.current.addFeature(feature);\n        alert(`Nearest place: ${nearest.name}`);\n      } else alert(\"No nearby places found.\");\n    } catch (err) {\n      console.error(\"Error finding nearest:\", err);\n    }\n  }, [createFeatureFromPlace]);\n\n  const calculateDistance = useCallback(async (p1, p2) => {\n    const [lon1, lat1] = p1;\n    const [lon2, lat2] = p2;\n    try {\n      const url = `${API_BASE_URL}/distance?lat1=${lat1}&lon1=${lon1}&lat2=${lat2}&lon2=${lon2}`;\n      const res = await fetch(url);\n      if (res.ok) {\n        const result = await res.json();\n        const output = document.getElementById(\"distance-output\");\n        if (output)\n          output.innerText = `Distance: ${result.distance_km.toFixed(2)} km (${result.distance_m.toFixed(0)} m)`;\n\n        interactionSource.current.clear();\n        const feat1 = new Feature({ geometry: new Point(fromLonLat(p1)) });\n        const feat2 = new Feature({ geometry: new Point(fromLonLat(p2)) });\n        const line = new Feature({ geometry: new LineString([fromLonLat(p1), fromLonLat(p2)]) });\n        interactionSource.current.addFeatures([feat1, feat2, line]);\n      } else alert(\"Failed to calculate distance.\");\n    } catch (err) {\n      console.error(\"Error calculating distance:\", err);\n    }\n  }, []);\n\n  const setActiveTool = useCallback((tool) => {\n    if (activeTool.current === tool) activeTool.current = null;\n    else activeTool.current = tool;\n    interactionSource.current.clear();\n    distancePoints.current = [];\n    const output = document.getElementById(\"distance-output\");\n    if (output) output.innerText = \"Distance: -\";\n  }, []);\n\n  // --- Initialize Map ---\n  useEffect(() => {\n    const basemap = new TileLayer({ source: new OSM() });\n    const featureLayer = new VectorLayer({ source: featureSource.current });\n    const interactionLayer = new VectorLayer({ source: interactionSource.current });\n\n    const map = new Map({\n      target: mapRef.current,\n      layers: [basemap, featureLayer, interactionLayer],\n      view: new View({ center: fromLonLat([78.9629, 20.5937]), zoom: 5 }),\n    });\n\n    mapInstance.current = map;\n\n    map.on(\"click\", (evt) => {\n      const lonLat = toLonLat(evt.coordinate);\n      const tool = activeTool.current;\n\n      if (tool === \"add-location\") {\n        const name = prompt(\"Enter Name:\");\n        const type = prompt(\"Enter Type:\");\n        if (name && type) addLocation(lonLat, name, type);\n      } else if (tool === \"find-nearest\") {\n        findNearest(lonLat);\n      } else if (tool === \"distance-calc\") {\n        distancePoints.current.push(lonLat);\n        interactionSource.current.addFeature(new Feature({ geometry: new Point(evt.coordinate) }));\n        if (distancePoints.current.length === 2) {\n          calculateDistance(distancePoints.current[0], distancePoints.current[1]);\n          distancePoints.current = [];\n        }\n      }\n    });\n\n    return () => map.setTarget(null);\n  }, [addLocation, findNearest, calculateDistance]);\n\n  return (\n    <div style={{ display: \"flex\", height: \"100vh\" }}>\n      <div ref={mapRef} style={{ flex: 3, height: \"100%\" }}></div>\n      <div style={{ flex: 1, padding: \"10px\", backgroundColor: \"#f2f2f2\", overflowY: \"auto\" }}>\n        <h2>GIS Services</h2>\n\n        <div style={{ marginBottom: \"15px\" }}>\n          <h3>Add Location (Click Map)</h3>\n          <button onClick={() => setActiveTool(\"add-location\")}>Activate Tool</button>\n        </div>\n\n        <div style={{ marginBottom: \"15px\" }}>\n          <h3>Find Nearby Places</h3>\n          <input type=\"number\" id=\"nearby-radius\" placeholder=\"Radius in Meters\" defaultValue=\"5000\" />\n          <button\n            onClick={() => {\n              const radius = parseFloat(document.getElementById(\"nearby-radius\").value);\n              if (isNaN(radius) || radius <= 0) return alert(\"Enter a valid radius.\");\n              const center = [78.9629, 20.5937]; // Default India\n              findNearby(center, radius);\n            }}\n          >\n            Find Nearby\n          </button>\n        </div>\n\n        <div style={{ marginBottom: \"15px\" }}>\n          <h3>Find Nearest (Click Map)</h3>\n          <button onClick={() => setActiveTool(\"find-nearest\")}>Activate Tool</button>\n        </div>\n\n        <div style={{ marginBottom: \"15px\" }}>\n          <h3>Distance Calculator (Click Map Twice)</h3>\n          <button onClick={() => setActiveTool(\"distance-calc\")}>Activate Tool</button>\n          <p id=\"distance-output\">Distance: -</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}